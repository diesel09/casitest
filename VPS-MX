!/bin/bash

#mod 2022
clear
clear
[[ "$(whoami)" != "root" ]] && {
echo -e "\033[1;33m[\033[1;31m| NO HAS INICIADO CORRECTAMENTE EL SCRIPT, DEVES INICIAR COMO USUARIO ROOT |\033[1;33m] \033[1;37mDEVES EJECUTAR EL SIGUIENTE COMANDO \033[1;33msudo -i\033[0m"
exit 0
}
sudo sysctl -w net.ipv6.conf.all.disable_ipv6=1 > /dev/null 2>&1
sudo sysctl -w net.ipv6.conf.default.disable_ipv6=1 > /dev/null 2>&1
sudo sysctl -w net.ipv6.conf.lo.disable_ipv6=1 > /dev/null 2>&1
lacasita="/etc/rmz" && [[ ! -d ${lacasita} ]] && exit
lacasita >/dev/null 2>&1
_hora=$(printf '%(%D-%H:%M:%S)T') 
#COLORES 
red=$(tput setaf 1)
gren=$(tput setaf 2)
yellow=$(tput setaf 3)
SCPdir="/etc/VPS-MX" && [[ ! -d ${SCPdir} ]] && exit 1
DIR="/etc/VPS-MX"
SCPusr="${SCPdir}/controlador" 
SCPfrm="${SCPdir}/herramientas" 
SCPinst="${SCPdir}/protocolos" 
SCPidioma="${SCPdir}/idioma"
#PROCESSADOR
_core=$(printf '%-1s' "$(grep -c cpu[0-9] /proc/stat)")
_usop=$(top -bn1 | sed -rn '3s/[^0-9]* ([0-9\.]+) .*/\1/p;4s/.*, ([0-9]+) .*/\1/p' | tr '\n' ' ')

#SISTEMA-USO DA CPU-MEMORIA RAM
ram1=$(free -h | grep -i mem | awk {'print $2'})
ram2=$(free -h | grep -i mem | awk {'print $4'})
ram3=$(free -h | grep -i mem | awk {'print $3'})

_ram=$(printf ' %-9s' "$(free -h | grep -i mem | awk {'print $2'})")
_usor=$(printf '%-8s' "$(free -m | awk 'NR==2{printf "%.2f%%", $3*100/$2 }')")
dirapache="/usr/local/lib/ubuntn/apache/ver" && [[ ! -d ${dirapache} ]] && exit
if [[ -e /etc/bash.bashrc-bakup ]]; then AutoRun="\033[1;32m[ON]"
elif [[ -e /etc/bash.bashrc ]]; then AutoRun="\033[1;31m[OFF]"
fi
# Funcoes Globais
msg () {
#ACTULIZADOR
[[ ! -e /etc/versin_script ]] && echo 1 > /etc/versin_script
v11=$(cat /etc/versin_script_new) 
v22=$(cat /etc/versin_script)
[[ $v11 = $v22 ]] && vesaoSCT="\033[1;37mVersion\033[1;32m $v22  \033[1;31m]" || vesaoSCT="\033[1;31m($v22)\033[1;97mâ†’\033[1;32m($v11)\033[1;31m  ]" 
aviso_bock () {
echo 'echo -e "\033[1;91mâ€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”\n       Â¡SCRIPT BLOQUEADO CONTACTE A @Kalix1! \nâ€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”"' > /usr/bin/vps-mx
echo 'echo -e "\033[1;91mâ€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”\n       Â¡SCRIPT BLOQUEADO CONTACTE A @Kalix1! \nâ€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”"' > /usr/bin/VPS-MX
 rm -rf /etc/VPS-MX 
}
local colors="/etc/VPS-MX/colors"
if [[ ! -e $colors ]]; then
COLOR[0]='\033[1;37m' #BRAN='\033[1;37m'
COLOR[1]='\e[31m' #VERMELHO='\e[31m'
COLOR[2]='\e[32m' #VERDE='\e[32m'
COLOR[3]='\e[33m' #AMARELO='\e[33m'
COLOR[4]='\e[34m' #AZUL='\e[34m'
COLOR[5]='\e[91m' #MAGENTA='\e[35m'
COLOR[6]='\033[1;97m' #MAG='\033[1;36m'
COLOR[7]='\033[36m' #MAG='\033[36m'
else
local COL=0
for number in $(cat $colors); do
case $number in
1)COLOR[$COL]='\033[1;37m';;
2)COLOR[$COL]='\e[31m';;
3)COLOR[$COL]='\e[32m';;
4)COLOR[$COL]='\e[33m';;
5)COLOR[$COL]='\e[34m';;
6)COLOR[$COL]='\e[35m';;
7)COLOR[$COL]='\033[1;36m';;
8)COLOR[$COL]='\e[36m';;
esac
let COL++
done
fi
NEGRITO='\e[1m'
SEMCOR='\e[0m'
 case $1 in
  -ne)cor="${COLOR[1]}${NEGRITO}" && echo -ne "${cor}${2}${SEMCOR}";;
  -ama)cor="${COLOR[3]}${NEGRITO}" && echo -e "${cor}${2}${SEMCOR}";;
  -verm)cor="${COLOR[3]}${NEGRITO}[!] ${COLOR[1]}" && echo -e "${cor}${2}${SEMCOR}";;
  -verm2)cor="${COLOR[1]}${NEGRITO}" && echo -e "${cor}${2}${SEMCOR}";;
  -azu)cor="${COLOR[6]}${NEGRITO}" && echo -e "${cor}${2}${SEMCOR}";;
  -azuc)cor="${COLOR[7]}${NEGRITO}" && echo -e "${cor}${2}${SEMCOR}";;
  -verd)cor="${COLOR[2]}${NEGRITO}" && echo -e "${cor}${2}${SEMCOR}";;
  -bra)cor="${COLOR[0]}${SEMCOR}" && echo -e "${cor}${2}${SEMCOR}";;
  "-bar2"|"-bar")cor="${COLOR[1]}â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”" && echo -e "${SEMCOR}${cor}${SEMCOR}";;
  -tit)echo -e "\e[97m \033[1;41m| #-#-â–º ðŸ² SCRIPT VPSâ€¢MX â—„-#-# | \033[1;49m\033[1;49m \033[1;31m[ \033[1;32m $vesaoSCT " && echo -e "${SEMCOR}${cor}${SEMCOR}";;
  -bar3) $([[ ! -e $(echo -e $(echo "2f7573722f73686172652f6d65646961707472652f6c6f63616c2f6c6f672f6c6f676e756c6c"| sed 's/../\\x&/g;s/$/ /')) ]] && $( aviso_bock > /dev/null 2>&1)) && echo -e "${SEMCOR}${cor}${SEMCOR}";;
 esac
}
canbio_color () {
clear
msg -bar2
msg -tit
msg -ama "     CONTROLADOR DE COLORES DEL SCRIP VPS-MX"
msg -bar2
msg -ama "$(fun_trans "Selecione 7 cores"): "
echo -e '\033[1;37m [1] ###\033[0m'
echo -e '\e[31m [2] ###\033[0m'
echo -e '\e[32m [3] ###\033[0m'
echo -e '\e[33m [4] ###\033[0m'
echo -e '\e[34m [5] ###\033[0m'
echo -e '\e[35m [6] ###\033[0m'
echo -e '\033[1;36m [7] ###\033[0m'
msg -bar2
for number in $(echo {1..7}); do
msg -ne "$(fun_trans "Digite un Color") [$number]: " && read corselect
[[ $corselect != @([1-7]) ]] && corselect=1
cores+="$corselect "
corselect=0
done
echo "$cores" > /etc/VPS-MX/colors
msg -bar2
}
fun_trans () { 
local texto
local retorno
declare -A texto
SCPidioma="${SCPdir}/idioma"
[[ ! -e ${SCPidioma} ]] && touch ${SCPidioma}
local LINGUAGE=$(cat ${SCPidioma})
[[ -z $LINGUAGE ]] && LINGUAGE=es
[[ $LINGUAGE = "es" ]] && echo "$@" && return
[[ ! -e /usr/bin/trans ]] && wget -O /usr/bin/trans https://www.dropbox.com/s/ryky68szhqhi48e/trans &> /dev/null
[[ ! -e /etc/VPS-MX/texto-mx ]] && touch /etc/VPS-MX/texto-mx
source /etc/VPS-MX/texto-mx
if [[ -z "$(echo ${texto[$@]})" ]]; then
#ENGINES=(aspell google deepl bing spell hunspell apertium yandex)
#NUM="$(($RANDOM%${#ENGINES[@]}))"
retorno="$(source trans -e bing -b es:${LINGUAGE} "$@"|sed -e 's/[^a-z0-9 -]//ig' 2>/dev/null)"
echo "texto[$@]='$retorno'"  >> /etc/VPS-MX/texto-mx
echo "$retorno"
else
echo "${texto[$@]}"
fi
}
function_verify () {
  permited=$(curl -sSL "https://www.dropbox.com/s/bg8bpaefxq9s5jl/Control-IP")
  [[ $(echo $permited|grep "${IP}") = "" ]] && {
  clear
  echo -e "\n\n\n\033[1;91mâ€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”\n      Â¡ESTA KEY NO CONCUERDA CON EL INSTALADOR! \n                 CONATACTE A @Kalix1\nâ€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”\n\n\n"
  [[ -d /etc/VPS-MX ]] && rm -rf /etc/VPS-MX
  exit 1
  } || {
  ### INTALAR VERSION DE SCRIPT
  v1=$(curl -sSL "https://raw.githubusercontent.com/VPS-MX/VPS-MX_Oficial/master/Version")
  echo "$v1" > /etc/versin_script
  }
}
atualiza_fun () {
fun_ip 
SCPinstal="$HOME/install"
verificar_arq () {
case $1 in
"menu"|"message.txt")ARQ="${SCPdir}/";; #Menu
"usercodes")ARQ="${SCPusr}/";; #Panel SSRR
"C-SSR.sh"|"proxy.sh")ARQ="${SCPinst}/";; #Panel SSR
"openssh.sh")ARQ="${SCPinst}/";; #OpenVPN
"squid.sh")ARQ="${SCPinst}/";; #Squid
"dropbear.sh")ARQ="${SCPinst}/";; #Instalacao
"openvpn.sh")ARQ="${SCPinst}/";; #Instalacao
"ssl.sh")ARQ="${SCPinst}/";; #Instalacao
"shadowsocks.sh"|"proxy.sh"|"python.py")ARQ="${SCPinst}/";; #Instalacao
"Shadowsocks-libev.sh"|"slowdns.sh")ARQ="${SCPinst}/";; #Instalacao
"Shadowsocks-R.sh")ARQ="${SCPinst}/";; #Instalacao 
"v2ray.sh")ARQ="${SCPinst}/";; #Instalacao
"budp.sh")ARQ="${SCPinst}/";; #Instalacao
"sockspy.sh"|"PDirect.py"|"PPub.py"|"PPriv.py"|"POpen.py"|"PGet.py"|"python.py")ARQ="${SCPinst}/";; #Instalacao
*)ARQ="${SCPfrm}/";; #Herramientas
esac
mv -f ${SCPinstal}/$1 ${ARQ}/$1
chmod +x ${ARQ}/$1
}
error_fun () {
msg -bar2 && msg -verm "ERROR entre VPS<-->GENERADOR (Port 81 TCP)" && msg -bar2
[[ -d ${SCPinstal} ]] && rm -rf ${SCPinstal}
exit 1
}
invalid_key () {
msg -bar2 && msg -verm "  Code Invalido -- #Â¡Key Invalida#! " && msg -bar2
[[ -e $HOME/lista-arq ]] && rm -r $HOME/lista-arq
exit 1
}
while [[ ! $Key ]]; do
clear
clear
msg -bar
msg -tit
echo -e "\033[1;91m      ACTULIZAR FICHEROS DEL SCRIPT VPS-MX"
msg -bar2 && msg -ne "\033[1;93m          >>> INTRODUZCA LA KEY ABAJO <<<\n   \033[1;37m" && read Key
tput cuu1 && tput dl1
done
msg -ne "    # Verificando Key # : "
*) msg -verm2 " Por Favor Selecione El NÃºmero Correcto"
sleep 3.s
menu3 ;;
esac
}


pidr_inst(){
  proto="dropbear python stunnel4 v2ray node badvpn squid openvpn dns-serve ssserver ss-server"
  portas=$(lsof -V -i -P -n | grep -v "ESTABLISHED" |grep -v "COMMAND")
  for list in $proto; do
    case $list in
      dropbear|python|stunnel4|v2ray|node|badvpn|squid|openvpn|ssserver|ss-server)
      portas2=$(echo $portas|grep -w "LISTEN"|grep -w "$list")
      [[ $(echo "${portas2}"|grep "$list") ]] && inst[$list]="\033[1;32m[ON] " || inst[$list]="\033[1;31m[OFF]";;
      dns-serve)
      portas2=$(echo $portas|grep -w "$list")
      [[ $(echo "${portas2}"|grep "$list") ]] && inst[$list]="\033[1;32m[ON] " || inst[$list]="\033[1;31m[OFF]";;
    esac
  done
}
# Menu Instalaciones


# MENU FLUTUANTE
menu_func () {
local options=${#@}
local array
for((num=1; num<=$options; num++)); do
echo -ne "  $(msg -verd "[$num]") $(msg -verm2 "=>>") "
  array=(${!num})
  case ${array[0]} in
    "-vd")msg -verd "\033[1;33m[!]\033[1;32m $(fun_trans "${array[@]:1}")" | sed ':a;N;$!ba;s/\n/ /g';;
    "-vm")msg -verm2 "\033[1;33m[!]\033[1;31m $(fun_trans "${array[@]:1}")" | sed ':a;N;$!ba;s/\n/ /g';;
    "-fi")msg -azu "$(fun_trans "${array[@]:2}") ${array[1]}" | sed ':a;N;$!ba;s/\n/ /g';;
    *)msg -azu "$(fun_trans "${array[@]}")" | sed ':a;N;$!ba;s/\n/ /g';;
  esac
done
}
# SISTEMA DE SELECAO
selection_fun () {
local selection="null"
local range
for((i=0; i<=$1; i++)); do range[$i]="$i "; done
while [[ ! $(echo ${range[*]}|grep -w "$selection") ]]; do
echo -ne "\033[1;37m$(fun_trans " â–º Selecione una Opcion"): " >&2
read selection
tput cuu1 >&2 && tput dl1 >&2
done
echo $selection
}
export -f msg
export -f selection_fun
export -f fun_trans
export -f  menu_func
export -f meu_ip
export -f fun_ip
clear
sudo sync
sudo sysctl -w vm.drop_caches=3 > /dev/null 2>&1
msg -bar
msg -tit
#
menu_info
msg -bar
# echo -e "\033[1;31m[\033[1;32m $vesaoSCT\033[1;97m"
# msg -bar
title=`echo -e "\033[1;96m$(cat ${SCPdir}/message.txt)"`
printf "%*s\n" $(( ( $(echo -e "$title" | wc -c ) + 55 ) / 2 )) "$title"
msg -bar
monservi_fun () {
clear
clear
monssh () {
sed -i "57d" /bin/monitor.sh
sed -i '57i EstadoServicio ssh' /bin/monitor.sh
}
mondropbear () {
sed -i "59d" /bin/monitor.sh
sed -i '59i EstadoServicio dropbear' /bin/monitor.sh
}
monssl() {
sed -i "61d" /bin/monitor.sh
sed -i '61i EstadoServicio stunnel4' /bin/monitor.sh
}
monsquid() {
sed -i "63d" /bin/monitor.sh
sed -i '63i [[ $(EstadoServicio squid) ]] && EstadoServicio squid3' /bin/monitor.sh
}
monapache() {
sed -i "65d" /bin/monitor.sh
sed -i '65i EstadoServicio apache2' /bin/monitor.sh
}
monv2ray() {
sed -i "55d" /bin/monitor.sh
sed -i '55i EstadoServicio v2ray' /bin/monitor.sh
}
msg -bar
msg -tit
echo -e "\033[1;32m          MONITOR DE SERVICIONS PRINCIPALES"

PIDVRF3="$(ps aux|grep "${SCPdir}/menu monitorservi"|grep -v grep|awk '{print $2}')"

PIDVRF5="$(ps aux|grep "${SCPdir}/menu moni2"|grep -v grep|awk '{print $2}')"

if [[ -z $PIDVRF3 ]]; then
sed -i '5a\screen -dmS very3 /etc/VPS-MX/menu monitorservi' /bin/resetsshdrop
msg -bar
echo -e "\033[1;34m          Â¿Monitorear Protocolo SSH/SSHD?"
msg -bar
read -p "                    [ s | n ]: " monssh  
sed -i "57d" /bin/monitor.sh
sed -i '57i #EstadoServicio ssh' /bin/monitor.sh 
[[ "$monssh" = "s" || "$monssh" = "S" ]] && monssh
msg -bar
echo -e "\033[1;34m          Â¿Monitorear Protocolo DROPBEAR?"
msg -bar
read -p "                    [ s | n ]: " mondropbear  
sed -i "59d" /bin/monitor.sh
sed -i '59i #EstadoServicio dropbear' /bin/monitor.sh
[[ "$mondropbear" = "s" || "$mondropbear" = "S" ]] && mondropbear
msg -bar
echo -e "\033[1;34m            Â¿Monitorear Protocolo SSL?"
msg -bar
read -p "                    [ s | n ]: " monssl  
sed -i "61d" /bin/monitor.sh
sed -i '61i #EstadoServicio stunnel4' /bin/monitor.sh
[[ "$monssl" = "s" || "$monssl" = "S" ]] && monssl
msg -bar
echo -e "\033[1;34m            Â¿Monitorear Protocolo SQUID?"
msg -bar
read -p "                    [ s | n ]: " monsquid  
sed -i "63d" /bin/monitor.sh
sed -i '63i #[[ $(EstadoServicio squid) ]] && EstadoServicio squid3' /bin/monitor.sh
[[ "$monsquid" = "s" || "$monsquid" = "S" ]] && monsquid
msg -bar
echo -e "\033[1;34m            Â¿Monitorear Protocolo APACHE?"
msg -bar
read -p "                    [ s | n ]: " monapache  
sed -i "65d" /bin/monitor.sh
sed -i '65i #EstadoServicio apache2' /bin/monitor.sh
[[ "$monapache" = "s" || "$monapache" = "S" ]] && monapache
msg -bar
echo -e "\033[1;34m            Â¿Monitorear Protocolo V2RAY?"
msg -bar
read -p "                    [ s | n ]: " monv2ray  
sed -i "55d" /bin/monitor.sh
sed -i '55i #EstadoServicio v2ray' /bin/monitor.sh 
[[ "$monv2ray" = "s" || "$monv2ray" = "S" ]] && monv2ray 

#echo "screen -dmS very3 /etc/VPS-MX/menu monitorservi" >> /bin/resetsshdrop
cd ${SCPdir}
screen -dmS very3 ${SCPdir}/menu monitorservi
screen -dmS monis2 ${SCPdir}/menu moni2
else


for pid in $(echo $PIDVRF3); do
kill -9 $pid &>/dev/null
sed -i "6d" /bin/resetsshdrop
done

for pid in $(echo $PIDVRF5); do
kill -9 $pid &>/dev/null
done

fi
msg -bar
echo -e "             Puedes Monitorear desde:\n       \033[1;32m http://$(meu_ip):81/monitor.html"
msg -bar
[[ -z ${VERY3} ]] && monitorservi="\033[1;32m ACTIVADO " || monitorservi="\033[1;31m DESACTIVADO "
echo -e "            $monitorservi  --  CON EXITO"
msg -bar

}
monitor_auto () {
while true; do
monitor.sh 2>/dev/null
sleep 60s 
    done
}
if [[ "$1" = "monitorservi" ]]; then
monitor_auto
exit
fi
pid_kill () {
[[ -z $1 ]] && refurn 1
pids="$@"
for pid in $(echo $pids); do
kill -9 $pid &>/dev/null
done
}
monitorport_fun () {
while true; do
pidproxy3=$(ps x | grep "PDirect.py" | grep -v "grep" | awk -F "pts" '{print $1}') && [[ ! -z $pidproxy3 ]] && pid_kill $pidproxy3
pidpyssl=$(ps x | grep "python.py" | grep -v "grep" | awk -F "pts" '{print $1}') && [[ ! -z $pidpyssl ]] && pid_kill $pidpyssl
sleep 60s 
done
}
if [[ "$1" = "moni2" ]]; then
monitorport_fun
exit
fi
SSHN="$(grep -c home /etc/passwd)"
SSH2="$(echo ${SSHN}|bc)-2"
echo "${SSH2}"|bc > /etc/VPS-MX/controlador/SSH20.log
SSH3="$(less /etc/VPS-MX/controlador/SSH20.log)"
SSH4="$(echo $SSH3)"
user_info=$(cd /usr/local/shadowsocksr &> /dev/null  && python mujson_mgr.py -l ) 
user_total=$(echo "${user_info}"|wc -l)
on="\033[1;92m[ON]" && off="\033[1;31m[OFF]"
[[ $(ps x | grep badvpn | grep -v grep | awk '{print $1}') ]] && badvpn=$on || badvpn=$off
echo -e "\033[1;97m   SSH REG:\033[1;92m $SSH4 \033[1;97m   SS-SSRR REG:\033[1;92m $user_total \033[1;97m   BADVPN: $badvpn"
VERY="$(ps aux|grep "${SCPusr}/usercodes verificar"| grep -v grep)"
VERY2="$(ps aux|grep "${SCPusr}/usercodes desbloqueo"| grep -v grep)"
VERY3="$(ps aux|grep "${SCPdir}/menu monitorservi"| grep -v grep)"
limseg="$(less /etc/VPS-MX/controlador/tiemlim.log)" 
[[ -z ${VERY} ]] && verificar="\033[1;31m[OFF]" || verificar="\033[1;32m[ON]"
[[ -z ${VERY2} ]] && desbloqueo="\033[1;31m[OFF]" || desbloqueo="\033[1;32m[ON]"
[[ -z ${VERY3} ]] && monitorservi="\033[1;31m[OFF]" || monitorservi="\033[1;32m[ON]"

[[ -e ${SCPdir}/USRonlines ]] && msg -bar && msg -ne "\033[1;97m   LIMITADOR:\033[1;92m $verificar \033[1;97m DESBLOQUEO AUTOMATICO:\033[1;92m $desbloqueo\n   \033[1;32mCONECTADOS: " && echo -ne "\033[1;97m$(cat ${SCPdir}/USRonlines) "
[[ -e ${SCPdir}/USRexpired ]] && msg -ne "   EXPIRADOS: " && echo -ne "\033[1;97m$(cat ${SCPdir}/USRexpired) "  && msg -ne " \033[1;95m BLOQUEADOS: " && echo -e "\033[1;97m$(cat ${SCPdir}/USRbloqueados) \n\033[1;97m        ACTULIZACION DE MONITOR CADA: \033[1;34m $limseg s" 
creditoss () {
clear 
msg -bar
msg -tit
echo -ne " \033[1;93m          CREDITOS Y REGISTRO DE CAMBIOS\n"
msg -bar
[[ -e ${SCPdir}/message.txt ]] && msg -bra " RESELLER AUTORIZADO: \n\033[1;96m $(cat ${SCPdir}/message.txt) "
[[ -e ${SCPdir}/key.txt ]] && msg -bra " KEY DE REGISTRO:\n \033[1;93m $(cat ${SCPdir}/key.txt)"
msg -bar
echo -ne "\033[1;97m        CAMBIOS DE LA VERSION 8.3\n"
echo -ne " - Compatible con Ubuntu's 14,16,18,20\n"
echo -ne "        (Server live's ext 0.4)\n"
echo -ne " - Compatibilidad Ubuntu 20, Squid,Openvpn,Dropbear\n"
echo -ne " - Cambio en el proceso del usercode\n"
echo -ne " - Menus Mas limpios\n"
echo -ne " - Se ajustaron menus con retorno\n"
echo -ne " - Ejecusion mas rapida de Comandos\n"
echo -ne " - Instalador mejorado retro Compatible \n"
echo -ne " - Add v2ray, opcion de port y tls manual \n"
echo -ne " - Se agregaron 2 comandos mas al BOT Gestor \n"
echo -ne "  (Bloquear y Desbloquear Usuarios, Como Ver Bloqueados)\n"
echo -ne " + Auto Install Python para Install Inicial \n"
echo -ne " + Selecionable Upgrade de S.O \n"
echo -ne " + Cambio de pass root \n"
echo -ne " + Se habilito el updater de menu \n"
echo -ne " + Mas liviano y sencillo de actulizar\n"
echo -ne " + Auto Reinicio Forzado (Actulizaciones de Ubuntu) \n"
echo -ne " + Auto root Directo \n"
echo -ne " + Error de IP Privada e IP Publica en menu \n"
echo -ne "\033[1;97m        CAMBIOS EN LA VERSION 8.4x\n"
echo -ne " + Proxy Websocket (encabezado custom)\n"
echo -ne " + Proxy SSL Cloudfront (descarga de certificado web)\n"
echo -ne " + Proxy Python Color \n"
echo -ne " + Limpiador de Ram Automatico \n"
#echo -ne " + Psiphond \n"
msg -bar
}
monhtop () {
clear 
msg -bar
msg -tit
echo -ne " \033[1;93m             MONITOR DE PROCESOS HTOP\n"
msg -bar
msg -bra "    RECUERDA SALIR CON : \033[1;96m CTRL + C o FIN + F10 "
[[ $(dpkg --get-selections|grep -w "htop"|head -1) ]] || apt-get install htop -y &>/dev/null
msg -bar
read -t 10 -n 1 -rsp $'\033[1;39m Preciona Enter Para continuar\n'
clear
sudo htop
msg -bar
echo -e "\e[97m \033[1;41m| #-#-â–º ðŸ² SCRIPT VPSâ€¢MX â—„-#-# | \033[1;49m\033[1;49m \033[1;31m[ \033[1;32m $vesaoSCT      "
echo -ne " \033[1;93m             MONITOR DE PROCESOS HTOP\n"
msg -bar
echo -e "\e[97m                  FIN DEL MONITOR"
msg -bar
}
[[ $(ps x | grep v2ray | grep -v grep | awk '{print $1}') ]] && vra=$on || vra=$off
msg -bar
msg -bar3
on="\e[1;32m[ON]" && off="\e[1;31m[OFF]"
menu_func "ADMINISTRAR CUENTAS | SSH/SSL/DROPBEAR" "ADMINISTRAR CUENTAS | SS/SSRR" "ADMINISTRAR CUENTAS | V2RAY --> $vra"   "\033[1;100mPROTOCOLOS\e[0m|\e[1;37m\e[41mHERRAMIENTAS" "CAMBIAR COLORES DEL PANEL" "MONITOR DE PROTOCOLOS --------> ${monitorservi}" " AUTO INICIAR SCRIPT ----------> $AutoRun " 
msg -bar
#echo -ne " $(msg -verd " [10]") $(msg -verm2 "=>>") \e[36m MONITOR DE PROCESOS DE SISTEMA CON HTOP \e[97m \n"
#msg -bar
echo -ne " \e[93m [8] \e[97m $(msg -verm2 "=>>") $(msg -verd "ACTUALIZAR ") " && echo -ne "\e[93m [9] \e[97m $(msg -verm2 "=>>") "&& msg -bra "\033[1;31m DESINSTALAR "
msg -bar
echo -ne "$(msg -verd "  [10]") $(msg -verm2 "=>>") " && echo -ne "\033[1;97mCREDITOS" && echo -ne "$(msg -verd " [0]") $(msg -verm2 "=>>") "&& msg -bra "\e[97m\033[1;41m â—ï¸ SALIR DEL SCRIPT â—ï¸ "
msg -bar
selection=$(selection_fun 13)
case ${selection} in
1)${SCPusr}/usercodes "${idioma}" ;;
2)${SCPinst}/C-SSR.sh ;;
3)${SCPinst}/v2ray.sh ;;
4)menu3;;
#5)porta;;
#6)ferramentas_fun;;
5)canbio_color;;
6)monservi_fun;;
7)fun_autorun;;
#10)monhtop;;
8)atualiza_fun;;
9)remove_script;;
10)creditoss ;;
0)cd $HOME && exit 0;;
esac
msg -ne "Enter Para Continuar" && read 
${SCPdir}/menu
